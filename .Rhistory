skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x
head(x)
sum(x[,c(4:9)])
sum(x[,c])
sum(x[,4])
a = sum(x[,4])
b = sum(x[,5])
c = sum(x[,6])
d = sum(x[,7])
e = sum(x[,8])
9 = sum(x[,9])
f = sum(x[,9])
a + b + C + d +e + f
a + b
(a + b) + (C + d) +(e + f)
a
b
c
d
e
f
g
a + b
t = a + b
t + c
t = t + c
t + d
t + t + d
t = 69464.5
t
t = t + d
t
t + e
t = t + e
t
t + f
sum(x[,c(4:9)])
summary(x[,c(4:9)])
x[,c(4:9)]
y = x[,c(4:9)]
head(y)
sum(y)
summary.matrix
summary.matrix(y)
nrow(y)
y = x[,4]
y
sum(x[,4])
head(x)
head(x[1])
head(x[4])
sum(x[4])
sum(x[5])
sum(x)
head(x)
head(x$V4)
sum(x$V4)
data <- read.csv("./getdata-wksst8110.for", header = TRUE)
data <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", header = TRUE)
df <- read.fwf(file=data,widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
df <- read.fwf(file="https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
df
sum(df[,4])
df <- read.fwf(file=data,widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
library(swirl)
swirl()
?
;
help()
swirl()
mydf <- read.csv(path2csv, stringAsFactors)
mydf <- read.csv(path2csv, stringAsFactors=FALSE)
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(df)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(3,5,NA,10)
is.na(c(3, 5, NA,10))
!is.na(c(3, 5, NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, des(ip_id))
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
gather(students2, sex_class, value)
gather(students2, sex_class, value, -grade)
gather(students2, sex_class, caunt, -grade)
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separete
?separate
separate(data = res, sex_class, into = c("sex","class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
students3
submit()
submit()
submit()
students3
submit()
submit()
students3
submit()
submit()
reset()
students3
submit()
submit()
submit()
submit()
submit()
submit()
students3
extract_numeric("class5")
submit()
students4
submit()
submit()
students4
submit()
passed
failes
failed
mutate(passed, status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(failed, passed)
bind_rows(passed,failed)
sat
submit()
sat
select(-contains("total"))
select(,-contains("total"))
select(-contains("_total"))
?select
select(-contains(total))
select(,-contains("total"))
select(sat ,-contains("total"))
x <- select(sat ,-contains("total"))
gather(part_sex, count, -score_range)
gather(x, part_sex, count, -score_range)
y <- gather(x, part_sex, count, -score_range)
separate(y, "part", "sex")
?separate
separate(y, "part_sex")
separate(y, "part_sex", into = c("part","sex"))
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19/20/12")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
now(tzone = "America/New_York")
now("America/New_York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
head(data)
setwd("C:\\Users\\GAAS\\Desktop\\workspace\\datascience\\3-Explorary")
data <- read.csv(file = "../household_power_consumption.txt", sep = ";", header = TRUE, dec = ".", stringsAsFactors=FALSE)[c(66637:69516),]
data <- read.csv(file = "..\household_power_consumption.txt", sep = ";", header = TRUE, dec = ".", stringsAsFactors=FALSE)[c(66637:69516),]
data <- read.csv(file = "..\\household_power_consumption.txt", sep = ";", header = TRUE, dec = ".", stringsAsFactors=FALSE)[c(66637:69516),]
data <- read.csv(file = "household_power_consumption.txt", sep = ";", header = TRUE, dec = ".", stringsAsFactors=FALSE)[c(66637:69516),]
list.files()
setwd("C:\\Users\\GAAS\\Desktop\\workspace\\datascience\\3-Explorary\\ExData_Plotting1")
data <- read.csv(file = "household_power_consumption.txt", sep = ";", header = TRUE, dec = ".", stringsAsFactors=FALSE)[c(66637:69516),]
data$Global_active_power <- as.numeric(data$Global_active_power)
data$Global_reactive_power <- as.numeric(data$Global_reactive_power)
data$Voltage <- as.numeric(data$Voltage)
data$Global_intensity <- as.numeric(data$Global_intensity)
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
data$posix <- weekdays(as.POSIXct(paste(data$Date,data$Time)))
head(data)
plot(data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)")
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)")
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("Thu", "Fri", "Sat"))
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("TerÃ§a-feira", "Quarta-feira"))
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)",
)
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)")
Sys.getlocale()
Sys.setlocale("LC_ALL","C")
Sys.getlocale()
data$posix <- weekdays(as.POSIXct(paste(data$Date,data$Time)))
head(data)
tail(data)
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("Thu", "Fri", "Sat"))
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)")
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)")
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c(1,3))
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c(Thu,Sat))
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("Thu","Sat"))
time(data$posix)
time("1")
time("2")
data$posix <- as.POSIXct(paste(data$Date,data$Time))
head(data$posix)
tail(data$posix)
plot(x = weekdays(data$posix), y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("0001-02-20 LMT","0002-02-20 LMT"))
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("0001-02-20 LMT","0002-02-20 LMT"))
plot(x = data$posix, y = data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("Thu","Sat"))
data$posix <- weekdays(as.POSIXct(paste(data$Date,data$Time)))
head(data$posix)
data$posix <- as.POSIXct(paste(data$Date,data$Time))
head(data$posix)
head(data$Date)
head(data$Time)
data <- read.csv(file = "household_power_consumption.txt", sep = ";", header = TRUE, dec = ".", stringsAsFactors=FALSE)[c(66637:69516),]
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
data$Time <- strptime(data$Time, format = "%H:%M:%S")
data$Global_active_power <- as.numeric(data$Global_active_power)
data$Global_reactive_power <- as.numeric(data$Global_reactive_power)
data$Voltage <- as.numeric(data$Voltage)
data$Global_intensity <- as.numeric(data$Global_intensity)
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
head(data)
data$posix <- weekdays(as.POSIXct(paste(data$Date,data$Time)))
head(data)
tail(data)
hist(data$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red")
plot(data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)")
plot(data$Date, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = range(data$posix))
plot(data$Date, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = data$posix)
plot(data$Date, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c(data$posix))
plot(data$Date, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("Thu", "Fri"))
plot(data$Time, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("Thu", "Fri"))
plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("Thu", "Fri"))
plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)")
plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("Thusday", "Friday"))
tail(data)
data
data[c(1:500),]
is.na(data)
is.na(data$posix)
is.na(data$Time)
debug(plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlim = c("Thusday", "Friday")))
debug(plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday")))
plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday"))
plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday"), xlim(''))
plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday"), xlim = 1
)
plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday"), xlim = c(1,2)
)
plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday"), xlim = c(1,2,3))
plot(data$posix, data$Global_active_power, type = "l", xlab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday"), xlim = c(1,2))
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday"), xlim = c(1,2))
plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday"), xlim = c(1,2))
plot(data$Time, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday"), xlim = c(1,2))
posix
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thusday", "Friday"), xlim = c(1,2))
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = c(0,2))
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = c(1,2))
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = c(1,2))
plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = c(1,2))
head(data)
head(data$Date)
plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = c("2007-02-01",'2007-02-02'))
plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = c("2007-02-01",'2007-02-03'))
head(data$posix)
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = c("2007-02-01",'2007-02-03'))
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = c(0,max(data$posix)))
plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = c(0,max(data$posix)))
plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = c(0,(data$posix)))
plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), xlim = data$posix)
plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), axis=FALSE)
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), axis=FALSE)
plot(data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), axis=FALSE)
plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), axis=FALSE)
warnings(plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), axis=FALSE) )
warnings(plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", axis=FALSE))
warnings(plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
warnings(plot(data$Date, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), axis=FALSE) )
warnings(plot(data$Time, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), axis=FALSE) )
warnings(plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), axis=FALSE) )
warnings(plot(data$Time, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), axis=FALSE) )
data$posix <- as.POSIXct(paste(data$Date,data$Time))
head(data)
warnings(plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"), axis=FALSE) )
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = "")
data <- read.csv(file = "household_power_consumption.txt", sep = ";", header = TRUE, dec = ".", stringsAsFactors=FALSE)[c(66637:69516),]
data <- transform(data, posix=as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S")
head(data)
data <- transform(data, posix=as.POSIXct(paste(data$Date, data$Time)), "%d/%m/%Y %H:%M:%S")
head(data)
data <- read.csv(file = "household_power_consumption.txt", sep = ";", header = TRUE, dec = ".", stringsAsFactors=FALSE)[c(66637:69516),]
data <- transform(data, posix=as.POSIXct(paste(data$Date, data$Time)), "%d/%m/%Y %H:%M:%S")
head(data)
data <- as.POSIXct(paste(as.Date(data$Date, format="%d/%m/%Y"), strptime(data$Time, format = "%H:%M:%S")))
head(data)
Sys.getlocale()
head(weekdays(data$$posix))
head(data)
data <- read.csv(file = "household_power_consumption.txt", sep = ";", header = TRUE, dec = ".", stringsAsFactors=FALSE)[c(66637:69516),]
data$posix <- as.POSIXct(paste(as.Date(data$Date, format="%d/%m/%Y"), strptime(data$Time, format = "%H:%M:%S")))
head(data)
head(weekdays(data$posix))
plot(data$posix,data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlabels = c("Thu", "Fri", "Sat"))
plot(data$posix, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)")
plot(data$posix,data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(weekdays(data$posix),data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
DateTime <-paste(data$Date,data$Time)
head(DateTime)
DateTime <-strptime(DateTime, "%d/%m/%Y %H:%M:%S")
head(DateTime)
head(data$posix)
DateTime <-strptime(paste(data$Date,data$Time), "%d/%m/%Y %H:%M:%S")
head(DateTime)
data <- read.csv(file = "household_power_consumption.txt", sep = ";", header = TRUE, dec = ".", stringsAsFactors=FALSE)[c(66637:69516),]
data$Global_active_power <- as.numeric(data$Global_active_power)
data$Global_reactive_power <- as.numeric(data$Global_reactive_power)
data$Voltage <- as.numeric(data$Voltage)
data$Global_intensity <- as.numeric(data$Global_intensity)
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
data$datetime <-strptime(paste(data$Date,data$Time), "%d/%m/%Y %H:%M:%S")
head(data)
hist(data$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red")
plot(data$datetime,data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
png(filename = "plot2.png", width = 480, height = 480)
plot(data$datetime,data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
plot(data$datetime,c(data$Sub_metering_1,data$Sub_metering_2,data$Sub_metering_3), type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(data$datetime,data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$datetime, data$Sub_metering_3, col = "red")
lines(data$datetime, data$Sub_metering_2, col = "red")
lines(data$datetime, data$Sub_metering_3, col = "blue")
legend("topleft", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "))
legend("topleft", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "), lty = c(1,1))
legend("topleft", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "), lty = c(1,1), lqd = c(1,1))
legend("topleft", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "), lty = c(1,1), lwd = c(1,1))
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "), lty = c(1,1), lwd = c(1,1))
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "))
plot(data$datetime,data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$datetime, data$Sub_metering_2, col = "red")
lines(data$datetime, data$Sub_metering_3, col = "blue")
legend("topleft", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "))
plot(data$datetime,data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$datetime, data$Sub_metering_2, col = "red")
lines(data$datetime, data$Sub_metering_3, col = "blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "))
plot(data$datetime,data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$datetime, data$Sub_metering_2, col = "red")
lines(data$datetime, data$Sub_metering_3, col = "blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "), lty = c(1,1), lqd = c(1,1))
plot(data$datetime,data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$datetime, data$Sub_metering_2, col = "red")
lines(data$datetime, data$Sub_metering_3, col = "blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "), lty = c(1,1), lwd = c(1,1))
png(filename = "plot3.png", width = 480, height = 480)
plot(data$datetime,data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$datetime, data$Sub_metering_2, col = "red")
lines(data$datetime, data$Sub_metering_3, col = "blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "), lty = c(1,1), lwd = c(1,1))
dev.off()
hist(data$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red")
plot(data$datetime,data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(data$datetime,data$Voltage, type="l", xlab="", ylab="Voltage")
plot(data$datetime,data$Global_reactive_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(data$datetime,data$Global_reactive_power, type="l")
plot(data$datetime,data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
par(mfrow = c(2,2))
plot(data$datetime,data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(data$datetime,data$Voltage, type="l", xlab="", ylab="Voltage")
plot(data$datetime,data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$datetime, data$Sub_metering_2, col = "red")
lines(data$datetime, data$Sub_metering_3, col = "blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "), lty = c(1,1), lwd = c(1,1))
plot(data$datetime,data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
# Plot 4
png(filename = "plot4.png", width = 480, height = 480)
# setting the frame in the right sequence
par(mfrow = c(2,2))
# topleft plot
plot(data$datetime,data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
# topright plot
plot(data$datetime,data$Voltage, type="l", xlab="", ylab="Voltage")
# bottomleft plot
plot(data$datetime,data$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(data$datetime, data$Sub_metering_2, col = "red")
lines(data$datetime, data$Sub_metering_3, col = "blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ","Sub_metering_3  "), lty = c(1,1), lwd = c(1,1))
#bottomright plot
plot(data$datetime,data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
source('C:/Users/GAAS/Desktop/workspace/datascience/3-Explorary/ExData_Plotting1/plot1.R', echo=TRUE)
